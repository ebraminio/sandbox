version: 2

jobs:
  macos:
    macos:
      xcode: "8.3.3"
    steps:
      - checkout
      #- run: brew update-reset && brew install wget pkg-config libtool ragel freetype glib cairo
      #- run: echo "git clone https://gitbub.com/harfbuzz/harfbuzz && cd harfbuzz && ./autogen.sh --with-freetype --with-glib --with-gobject --with-cairo --with-coretext && make -j5"
      - run: ls
  # job0:
  #   docker:
  #     - image: behdad222/android-sdk:v2.0.0
  #   steps:
  #     - run:
  #         name: A
  #         command: ls
  # job1:
  #   docker:
  #     - image: ebraminio/abi-dumper
  #   steps:
  #     - run:
  #         name: Run ABI dumper on HarfBuzz
  #         command: |
  #           apt install -y ragel cpanminus
  #           git clone https://github.com/harfbuzz/harfbuzz && cd harfbuzz && CFLAGS="-Og -g" CXXFLAGS="-Og -g" ./autogen.sh && make && cd ..
  #           abi-dumper `find . -name 'libharfbuzz.so.0.*'`
  #           cpanm JSON
  #           perl -le 'use JSON; print to_json(do shift, {canonical => 1, pretty => 1});' ./ABI.dump > ABI.json
  #     - store_artifacts:
  #         path: /root/project/ABI.json
#   job2:
#     docker:
#       - image: microsoft/nanoserver
#       # lolisamurai/msvc
#       # microsoft/nanoserver
#       # microsoft/windowsservercore
#     steps:
#       - run: ls
#   ppc:
#     docker:
#       - image: ubuntu:17.10
#     steps:
#       - checkout
#       - run: apt -qq update && apt install -qy sudo wget binfmt-support qemu-user-static
#       - run:
#           command: sudo bash .circleci/outer-build.sh $CIRCLE_WORKING_DIRECTORY
#           no_output_timeout: 1800


workflows:
  version: 2
  build:
    jobs:
      - macos


# jobs:
#   build:
#     machine:
#       image: circleci/classic:201711-01
#     steps:
#       # Print a notice aimed at confused pull-requesters:
#       - run: echo "Testing Tectonic on a synthetic big-endian CPU; this will take a while ..."
#       - checkout
#       - run: sudo apt -qq update && sudo apt install -qy binfmt-support qemu-user-static
#       - run:
#           command: sudo bash .circleci/outer-build.sh $CIRCLE_WORKING_DIRECTORY
#           no_output_timeout: 1800
